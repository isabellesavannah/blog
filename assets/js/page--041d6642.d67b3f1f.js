(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{489:function(t,e,s){"use strict";s.r(e);var o=s(2),n=Object(o.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("What is Scope ?\nThe Scope is either Global or Local. If its local it kind of creates a barrier in which they can be used.\nLet = no hoist\nVar = hoisting")]),t._v(" "),s("p",[t._v("What is Hoisting ?\nHoisting means that, that element is still able to excecute outside of their local scope.")]),t._v(" "),s("p",[t._v("In what cases might you use let vs const vs var?\nLet is most common and is local, if you use let inside of a function it will only be used within that function")]),t._v(" "),s("p",[t._v("Var is used globally and mostly used outside of functions (at the top of you js code) as to be able to be called within functions")]),t._v(" "),s("p",[t._v("Conts stays constand and never reassigns value, aslo stays local")])])}),[],!1,null,null,null);e.default=n.exports}}]);